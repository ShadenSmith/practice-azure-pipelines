trigger:
- master

pool:
  name: 'DS_testing'

strategy:
  matrix:
    PyTorch12:
      cuda.version: '10.0'
      pytorch.version: '1.2'
      python.version: '3.6'
    PyTorch15:
      cuda.version: '10.1'
      pytorch.version: '1.5'
      python.version: '3.7'

steps:
  # Unfortunately nvidia's nvcc_linux-64=<version> seems to install 10.1 regardless?
  # Most of this complexity is a workaround to get the compiler toolchain to match the
  # cudatoolkit runtime
- script: |
    conda create --force --yes -n ds_test python=$(python.version) cudatoolkit=$(cuda.version)
    conda activate ds_test
    conda install conda
    conda install -c conda-forge cudatoolkit-dev=$(cuda.version)
    conda install gxx_linux-64
    conda install -c pytorch --yes pytorch=$(pytorch.version)
    export CUDA_HOME=${HOME}/miniconda3/envs/ds_test/pkgs/cudatoolkit-dev
  displayName: 'Setup environment python=$(python.version) pytorch=$(pytorch.version) cuda=$(cuda.version)'

- script: |
    conda activate ds_test
    python -m pip install --upgrade pip
    pip install -r requirements.txt

- script: |
    conda activate ds_test
    nvcc --version
    python -c "import torch; print(torch.__version__)"
  displayName: 'Test versions'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'